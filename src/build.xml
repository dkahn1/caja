<!-- Copyright (C) 2007 Google Inc.
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  -      http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
 -->

<!--
  - To run, cd to the directory containing this file, run
  -    ant <rulename>
  - and look for the output in ./ant-* directories.
  -
  - Valid values for <rulename> are:
  -   default   :  builds the plugin compiler (pluginc), tests, and docs
  -   clean     :  wipes generated files
  -   demos     :  demo files
  -   docs      :  javadoc
  -   pluginc   :  the plugin compiler
  -   runtests  :  runs the tests
  -
  - To run with assertions enabled, set the environment variable ANT_FLAGS="-ea"
 -->

<project name="pluginc" default="default" basedir=".">
  <description>
  A subset of javascript that allow an application to securely embed plugins via
  a capability based security model.
  </description>


  <!--== inputs ==-->
  <property name="src"         location="java"/>
  <property name="testsrc"     location="javatests"/>
  <property name="javascript"  location="js"/>
  <property name="third_party" location="./third_party/java"/>
  <property name="demos"       location="java/com/google/caja/demos"/>
  <!--== outputs ==-->
  <property name="reports"     location="ant-reports"/>  <!-- emma reports -->
  <property name="instr"       location="ant-instr"/>  <!-- instrumented src -->
  <property name="lib"         location="ant-lib"/>
  <property name="testlib"     location="ant-testlib"/>
  <property name="docs"        location="ant-docs"/>
  <property name="jars"        location="ant-jars"/>
  <property name="www"         location="ant-www"/>  <!-- demo files dir -->

  <path id="classpath.compile">
    <pathelement path="${third_party}/jakarta_commons/commons-cli.jar"/>
  </path>

  <path id="classpath.run">
    <pathelement path="${lib}"/>
  </path>

  <path id="classpath.tests.compile">
    <pathelement path="${third_party}/junit/junit.jar"/>
    <pathelement path="${third_party}/rhino/js.jar"/>
  </path>

  <path id="classpath.tests.run">
    <pathelement path="${third_party}/junit/junit.jar"/>
    <pathelement path="${third_party}/rhino/js.jar"/>
    <pathelement path="${third_party}/emma/emma.jar"/>
    <pathelement path="${instr}/classes"/>
    <!-- In case instrumentation not enabled -->
    <pathelement path="${lib}"/>
  </path>

  <path id="classpath.emma">
    <pathelement path="${third_party}/emma/emma.jar"/>
  </path>

  <path id="classpath.extensions">
    <pathelement path="${third_party}/emma/emma_ant.jar"/>
    <pathelement path="${third_party}/emma/emma.jar"/>
    <pathelement path="${third_party}/junit/junit.jar"/>
    <pathelement path="${third_party}/apache_ant/ant-junit.jar"/>
  </path>

  <taskdef
    resource="emma_ant.properties"
    classpathref="classpath.extensions" />

  <taskdef
    name="junit"
    classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"
    classpathref="classpath.extensions" />

  <!--== rules ==-->
  <target name="default" depends="pluginc,opensocial,docs"
   description="Builds the plugin compiler, and documentation."/>

  <target name="clean"
   description="deletes all generated files leaving only sources">
    <delete dir="${reports}"/>
    <delete dir="${docs}"/>
    <delete dir="${instr}"/>
    <delete dir="${jars}"/>
    <delete dir="${lib}"/>
    <delete dir="${testlib}"/>
    <delete dir="${www}"/>
  </target>

  <target name="dirs">
    <mkdir dir="${reports}"/>
    <mkdir dir="${docs}"/>
    <mkdir dir="${instr}"/>
    <mkdir dir="${jars}"/>
    <mkdir dir="${lib}"/>
    <mkdir dir="${testlib}"/>
    <mkdir dir="${www}"/>
  </target>

  <target name="runtests" depends="AllTests"
   description="Builds and runs unittests.">
    <!-- Instrument the compiled class files to gather code coverage stats -->
    <emma enabled="${emma.enabled}">
      <instr instrpath="${lib}" destdir="${instr}" mode="fullcopy"
       metadatafile="${reports}/metadata.em" merge="true">
        <filter value="${emma.filter}"/>
      </instr>
    </emma>
    <!--
      - If this fails to run, try with -verbose.  If you see a problem with
      - forking, check your JAVA and JAVA_HOME environment variables and make
      - sure ant is using jdk1.6.
     -->
    <junit printsummary="yes" fork="yes">
      <assertions><enable/></assertions>  <!-- ignored unless fork="yes" -->
      <classpath refid="classpath.tests.run"/>
      <formatter type="plain" usefile="false"/>
      <test name="com.google.caja.AllTests"/>
      <sysproperty key="emma.coverage.out.file" value="${reports}/coverage.ec"/>
      <sysproperty key="emma.coverage.out.merge" value="false"/>
    </junit>
    <!-- Generate the code coverage report. -->
    <emma enabled="${emma.enabled}">
      <report sourcepath="${src}:${testsrc}" sort="+block,+name,+method,+class"
       metrics="method:70,block:80,line:80,class:100">
        <fileset dir="${reports}">
          <include name="*.em" />
          <include name="*.ec" />
        </fileset>
        <html outfile="${reports}/coverage.html" encoding="UTF-8"/>
      </report>
    </emma>
  </target>

  <target name="docs" description="Builds javadoc documentation.">
    <mkdir dir="${docs}"/>
    <javadoc sourcepath="${src}" destdir="${docs}" access="private"
     author="true"
     bottom="Copyright (C) 2007 Google Inc.&lt;br&gt;
             &lt;a href=http://www.apache.org/licenses/LICENSE-2.0&gt;
             Licensed under the Apache License, Version 2.0&lt;/a&gt;"
     docencoding="utf-8"
     packagenames="com/google/caja/*"
     classpathref="classpath.compile"/>
     <!-- overview="${src}/overview.html" -->
  </target>

  <target name="AllTests" depends="opensocial,pluginc,TestUtil,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${testsrc}"/>
      <classpath refid="classpath.tests.compile"/>
      <include name="**/caja/AllTests.java"/>
      <include name="**/caja/lexer/CharProducerTest.java"/>
      <include name="**/caja/lexer/CommentLexerTest.java"/>
      <include name="**/caja/lexer/CssLexerTest.java"/>
      <include name="**/caja/lexer/HtmlLexerTest.java"/>
      <include name="**/caja/lexer/JsLexerTest.java"/>
      <include name="**/caja/lexer/LookaheadCharProducerTest.java"/>
      <include name="**/caja/lexer/PunctuationTrieTest.java"/>
      <include name="**/caja/lexer/escaping/EscapingTest.java"/>
      <include name="**/caja/opensocial/DefaultGadgetRewriterTest.java"/>
      <include name="**/caja/opensocial/GadgetParserTest.java"/>
      <include name="**/caja/parser/ParseTreeNodeTest.java"/>
      <include name="**/caja/parser/css/Css2Test.java"/>
      <include name="**/caja/parser/css/CssParserTest.java"/>
      <include name="**/caja/parser/css/CssTreeTest.java"/>
      <include name="**/caja/parser/html/DomParserTest.java"/>
      <include name="**/caja/parser/html/JsHtmlParserTest.java"/>
      <include name="**/caja/parser/quasiliteral/MatchTest.java"/>
      <include name="**/caja/parser/quasiliteral/QuasiBuilderTest.java"/>
      <include name="**/caja/parser/js/ParserTest.java"/>
      <include name="**/caja/parser/js/StringLiteralTest.java"/>
      <include name="**/caja/plugin/CompiledPluginTest.java"/>
      <include name="**/caja/plugin/CssRewriterTest.java"/>
      <include name="**/caja/plugin/CssValidatorTest.java"/>
      <include name="**/caja/plugin/ExpressionSanitizerTest.java"/>
      <include name="**/caja/plugin/GxpCompilerTest.java"/>
      <include name="**/caja/plugin/GxpValidatorTest.java"/>
      <include name="**/caja/plugin/HtmlCompiledPluginTest.java"/>
      <include name="**/caja/plugin/HtmlWhitelistTest.java"/>
      <include name="**/caja/plugin/PluginCompilerTest.java"/>
      <include name="**/caja/plugin/UrlUtilTest.java"/>
      <include name="**/caja/plugin/caps/CapabilityRewriterTest.java"/>
      <include name="**/caja/util/PipelineTest.java"/>
      <include name="**/caja/util/SparseBitSetTest.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
    <copy todir="${lib}">
      <fileset dir="${testsrc}">
        <include name="**/caja/lexer/csslexergolden1.txt"/>
        <include name="**/caja/lexer/csslexerinput1.css"/>
        <include name="**/caja/lexer/htmllexergolden1.txt"/>
        <include name="**/caja/lexer/htmllexerinput1.html"/>
        <include name="**/caja/lexer/lexergolden1.txt"/>
        <include name="**/caja/lexer/lexergolden2.txt"/>
        <include name="**/caja/lexer/lexertest1.js"/>
        <include name="**/caja/lexer/lexertest2.js"/>
        <include name="**/caja/lexer/testinput1.txt"/>
        <include name="**/caja/opensocial/example.xml"/>
        <include name="**/caja/opensocial/example-gadget-files/*"/>
        <include name="**/caja/opensocial/example-rewritten.xml"/>
        <include name="**/caja/opensocial/listfriends-inline.xml"/>
        <include name="**/caja/opensocial/listfriends.js"/>
        <include name="**/caja/opensocial/listfriends.xml"/>
        <include name="**/caja/opensocial/test-parsing.xml"/>
        <include name="**/caja/parser/css/cssparsergolden1.txt"/>
        <include name="**/caja/parser/css/cssparsergolden2.txt"/>
        <include name="**/caja/parser/css/cssparserinput1.css"/>
        <include name="**/caja/parser/css/cssparserinput2.css"/>
        <include name="**/caja/parser/css/cssrendergolden1.txt"/>
        <include name="**/caja/parser/html/htmlparsertest1.gxp"/>
        <include name="**/caja/parser/html/htmlparsergolden1.txt"/>
        <include name="**/caja/parser/js/parsergolden1.txt"/>
        <include name="**/caja/parser/js/parsergolden2.txt"/>
        <include name="**/caja/parser/js/parsergolden3.txt"/>
        <include name="**/caja/parser/js/parsergolden5.txt"/>
        <include name="**/caja/parser/js/parsertest1.js"/>
        <include name="**/caja/parser/js/parsertest2.js"/>
        <include name="**/caja/parser/js/parsertest3.js"/>
        <include name="**/caja/parser/js/parsertest4.js"/>
        <include name="**/caja/parser/js/parsertest5.js"/>
        <include name="**/caja/parser/js/parsertest6.js"/>
        <include name="**/caja/parser/js/rendergolden1.txt"/>
        <include name="**/caja/parser/js/rendergolden2.txt"/>
        <include name="**/caja/parser/js/rendergolden3.txt"/>
        <include name="**/caja/parser/js/rendergolden4.txt"/>
        <include name="**/caja/parser/js/rendergolden5.txt"/>
        <include name="**/caja/parser/js/rendergolden6.txt"/>
        <include name="**/caja/parser/quasiliteral/clickme.js"/>
        <include name="**/caja/parser/quasiliteral/function.js"/>
        <include name="**/caja/parser/quasiliteral/listfriends.js"/>
        <include name="**/caja/plugin/asserts.js"/>
        <include name="**/caja/plugin/browser-stubs.js"/>
        <include name="**/caja/plugin/caps/wrap_capability_test.js"/>
        <include name="**/caja/plugin/container.js"/>
        <include name="**/caja/plugin/gxpcompilergolden1.js"/>
        <include name="**/caja/plugin/gxpcompilergolden2.js"/>
        <include name="**/caja/plugin/gxpcompilergolden3.txt"/>
        <include name="**/caja/plugin/gxpcompilerinput1.gxp"/>
        <include name="**/caja/plugin/gxpcompilerinput2.gxp"/>
        <include name="**/caja/plugin/gxpcompilerinput3.gxp"/>
        <include name="**/caja/plugin/gxpcompilerinput4.gxp"/>
        <include name="**/caja/plugin/plugintest-csstest.golden"/>
        <include name="**/caja/plugin/plugintest-csstest.input"/>
        <include name="**/caja/plugin/plugintest-helloworld.golden"/>
        <include name="**/caja/plugin/plugintest-helloworld.input"/>
        <include name="**/caja/plugin/plugintest-references.golden"/>
        <include name="**/caja/plugin/plugintest-references.input"/>
        <include name="**/caja/plugin/sanitizergolden1.js"/>
        <include name="**/caja/plugin/sanitizergolden2.txt"/>
        <include name="**/caja/plugin/sanitizerinput1.js"/>
        <include name="**/caja/plugin/tmp-caja.js"/>
      </fileset>
    </copy>
    <copy todir="${lib}">
      <fileset dir="${javascript}">
        <include name="**/caja/caja.js"/>
      </fileset>
    </copy>
  </target>

  <target name="opensocial" depends="PluginCompiler,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/opensocial/*.java"/>
      <include name="**/caja/plugin/HtmlPluginCompiler.java"/>
      <include name="**/caja/plugin/HtmlPluginCompilerMain.java"/>
      <include name="**/caja/plugin/PluginCompilerMain.java"/>
    </javac>
  </target>

  <target name="pluginc" depends="PluginCompiler,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/plugin/PluginCompilerMain.java"/>
      <include name="**/caja/plugin/HtmlPluginCompilerMain.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
    <unjar src="${third_party}/jakarta_commons/commons-cli.jar" dest="${lib}"/>
    <jar destfile="${jars}/pluginc.jar" basedir="${lib}">
      <manifest>
        <attribute name="Main-Class"
         value="com.google.caja.plugin.HtmlPluginCompilerMain"/>
      </manifest>
    </jar>
    <jar destfile="${jars}/pluginc-src.jar" basedir="${src}">
    </jar>
  </target>

  <target name="TestUtil"
   depends="PluginCapabilities,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${testsrc}"/>
      <classpath refid="classpath.tests.compile"/>
      <include name="**/caja/util/TestUtil.java"/>
      <include name="**/caja/util/RhinoTestBed.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="PluginCompiler"
   depends="CssParserCore,HtmlParserCore,HtmlSchema,Quasiliterals,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/plugin/CssPropertyPartType.java"/>
      <include name="**/caja/plugin/CssRewriter.java"/>
      <include name="**/caja/plugin/CssTemplate.java"/>
      <include name="**/caja/plugin/CssValidator.java"/>
      <include name="**/caja/plugin/DomAttributeConstraint.java"/>
      <include name="**/caja/plugin/ExpressionSanitizer.java"/>
      <include name="**/caja/plugin/ExpressionSanitizerBaja.java"/>
      <include name="**/caja/plugin/GxpCompiler.java"/>
      <include name="**/caja/plugin/GxpValidator.java"/>
      <include name="**/caja/plugin/GlobalOptions.java"/>
      <include name="**/caja/plugin/HtmlCompiler.java"/>
      <include name="**/caja/plugin/HtmlPluginCompiler.java"/>
      <include name="**/caja/plugin/HtmlWhitelist.java"/>
      <include name="**/caja/plugin/HtmlValidator.java"/>
      <include name="**/caja/plugin/JsWriter.java"/>
      <include name="**/caja/plugin/PluginCompiler.java"/>
      <include name="**/caja/plugin/PluginMessageType.java"/>
      <include name="**/caja/plugin/PluginMeta.java"/>
      <include name="**/caja/plugin/UrlUtil.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
    <copy todir="${lib}">
      <fileset dir="${src}">
        <include name="**/caja/plugin/plugin-base.js"/>
        <include name="**/caja/plugin/html-sanitizer.js"/>
      </fileset>
    </copy>
  </target>

  <target name="PluginCapabilities">
    <copy todir="${lib}">
      <fileset dir="${src}">
        <include name="**/caja/plugin/caps/wrap_capability.js"/>
      </fileset>
    </copy>
  </target>

  <target name="HtmlParserCore" depends="Parser,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/parser/html/*.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="HtmlSchema" depends="dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/html/HTML.java"/>
      <include name="**/caja/html/HTML4.java"/>
      <include name="**/caja/html/HtmlWhitelist.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="CssParserCore" depends="Parser,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/parser/css/Css2.java"/>
      <include name="**/caja/parser/css/CssParser.java"/>
      <include name="**/caja/parser/css/CssPropertySignature.java"/>
      <include name="**/caja/parser/css/CssTree.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="Quasiliterals"
   depends="JsParserCore,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/parser/quasiliteral/MultipleNonemptyQuasiHole.java"
       />
      <include name="**/caja/parser/quasiliteral/MultipleQuasiHole.java"/>
      <include name="**/caja/parser/quasiliteral/ParseTreeNodeContainer.java"/>
      <include name="**/caja/parser/quasiliteral/QuasiBuilder.java"/>
      <include name="**/caja/parser/quasiliteral/QuasiHole.java"/>
      <include name="**/caja/parser/quasiliteral/QuasiNode.java"/>
      <include name="**/caja/parser/quasiliteral/Rewriter.java"/>
      <include name="**/caja/parser/quasiliteral/SimpleQuasiNode.java"/>
      <include name="**/caja/parser/quasiliteral/SingleQuasiHole.java"/>
      <include name="**/caja/parser/quasiliteral/TrailingUnderscoresHole.java"/>
    </javac>
  </target>

  <target name="JsParserCore"
   depends="JsParserBase,Parser,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/parser/ParserBase.java"/>
      <include name="**/caja/parser/js/AbstractExpression.java"/>
      <include name="**/caja/parser/js/AbstractStatement.java"/>
      <include name="**/caja/parser/js/ArrayConstructor.java"/>
      <include name="**/caja/parser/js/Block.java"/>
      <include name="**/caja/parser/js/BooleanLiteral.java"/>
      <include name="**/caja/parser/js/BreakStmt.java"/>
      <include name="**/caja/parser/js/CaseStmt.java"/>
      <include name="**/caja/parser/js/CatchStmt.java"/>
      <include name="**/caja/parser/js/Conditional.java"/>
      <include name="**/caja/parser/js/ContinueStmt.java"/>
      <include name="**/caja/parser/js/Declaration.java"/>
      <include name="**/caja/parser/js/DefaultCaseStmt.java"/>
      <include name="**/caja/parser/js/DoWhileLoop.java"/>
      <include name="**/caja/parser/js/Expression.java"/>
      <include name="**/caja/parser/js/ExpressionStmt.java"/>
      <include name="**/caja/parser/js/FinallyStmt.java"/>
      <include name="**/caja/parser/js/ForEachLoop.java"/>
      <include name="**/caja/parser/js/ForLoop.java"/>
      <include name="**/caja/parser/js/FormalParam.java"/>
      <include name="**/caja/parser/js/FunctionConstructor.java"/>
      <include name="**/caja/parser/js/FunctionDeclaration.java"/>
      <include name="**/caja/parser/js/Identifier.java"/>
      <include name="**/caja/parser/js/IntegerLiteral.java"/>
      <include name="**/caja/parser/js/LabeledStatement.java"/>
      <include name="**/caja/parser/js/LabeledStmtWrapper.java"/>
      <include name="**/caja/parser/js/Literal.java"/>
      <include name="**/caja/parser/js/Loop.java"/>
      <include name="**/caja/parser/js/MultiDeclaration.java"/>
      <include name="**/caja/parser/js/NestedScope.java"/>
      <include name="**/caja/parser/js/Noop.java"/>
      <include name="**/caja/parser/js/NullLiteral.java"/>
      <include name="**/caja/parser/js/NumberLiteral.java"/>
      <include name="**/caja/parser/js/ObjectConstructor.java"/>
      <include name="**/caja/parser/js/Operation.java"/>
      <include name="**/caja/parser/js/Parser.java"/>
      <include name="**/caja/parser/js/RealLiteral.java"/>
      <include name="**/caja/parser/js/Reference.java"/>
      <include name="**/caja/parser/js/RegexpLiteral.java"/>
      <include name="**/caja/parser/js/ReturnStmt.java"/>
      <include name="**/caja/parser/js/Statement.java"/>
      <include name="**/caja/parser/js/StringLiteral.java"/>
      <include name="**/caja/parser/js/SwitchCase.java"/>
      <include name="**/caja/parser/js/SwitchStmt.java"/>
      <include name="**/caja/parser/js/ThrowStmt.java"/>
      <include name="**/caja/parser/js/TryStmt.java"/>
      <include name="**/caja/parser/js/UndefinedLiteral.java"/>
      <include name="**/caja/parser/js/WhileLoop.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="JsParserBase" depends="dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/parser/js/Associativity.java"/>
      <include name="**/caja/parser/js/Operator.java"/>
      <include name="**/caja/parser/js/OperatorType.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="Parser" depends="Primitives,Reporting,Lexer,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/parser/MutableParseTreeNode.java"/>
      <include name="**/caja/parser/ParseTreeNode.java"/>
      <include name="**/caja/parser/Visitor.java"/>
      <include name="**/caja/parser/AbstractParseTreeNode.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="Lexer" depends="Primitives,Reporting,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/lexer/AbstractTokenStream.java"/>
      <include name="**/caja/lexer/CharProducer.java"/>
      <include name="**/caja/lexer/CommentLexer.java"/>
      <include name="**/caja/lexer/CssLexer.java"/>
      <include name="**/caja/lexer/CssTokenType.java"/>
      <include name="**/caja/lexer/HtmlLexer.java"/>
      <include name="**/caja/lexer/HtmlTokenType.java"/>
      <include name="**/caja/lexer/InputElementJoiner.java"/>
      <include name="**/caja/lexer/InputElementSplitter.java"/>
      <include name="**/caja/lexer/JsLexer.java"/>
      <include name="**/caja/lexer/JsTokenQueue.java"/>
      <include name="**/caja/lexer/JsTokenType.java"/>
      <include name="**/caja/lexer/Keyword.java"/>
      <include name="**/caja/lexer/LineContinuingCharProducer.java"/>
      <include name="**/caja/lexer/LookaheadCharProducer.java"/>
      <include name="**/caja/lexer/NumberRecognizer.java"/>
      <include name="**/caja/lexer/ParseException.java"/>
      <include name="**/caja/lexer/Punctuation.java"/>
      <include name="**/caja/lexer/PunctuationTrie.java"/>
      <include name="**/caja/lexer/Token.java"/>
      <include name="**/caja/lexer/TokenQueue.java"/>
      <include name="**/caja/lexer/TokenStream.java"/>
      <include name="**/caja/lexer/TokenType.java"/>
      <include name="**/caja/lexer/escaping/*.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="Reporting" depends="Primitives,dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/CajaException.java"/>
      <include name="**/caja/reporting/Message.java"/>
      <include name="**/caja/reporting/MessageGroup.java"/>
      <include name="**/caja/reporting/MessageLevel.java"/>
      <include name="**/caja/reporting/MessageQueue.java"/>
      <include name="**/caja/reporting/MessageType.java"/>
      <include name="**/caja/reporting/MessageTypeInt.java"/>
      <include name="**/caja/reporting/DevNullMessageQueue.java"/>
      <include name="**/caja/reporting/EchoingMessageQueue.java"/>
      <include name="**/caja/reporting/SimpleMessageQueue.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="Primitives" depends="dirs">
    <javac destdir="${lib}" debug="true" target="1.5" source="1.5">
      <src path="${src}"/>
      <classpath refid="classpath.compile"/>
      <include name="**/caja/lexer/ExternalReference.java"/>
      <include name="**/caja/lexer/FilePosition.java"/>
      <include name="**/caja/lexer/InputSource.java"/>
      <include name="**/caja/reporting/MessageContext.java"/>
      <include name="**/caja/reporting/MessagePart.java"/>
      <include name="**/caja/reporting/RenderContext.java"/>
      <include name="**/caja/reporting/Renderable.java"/>
      <include name="**/caja/util/*.java"/>
      <!-- compilerarg line="-Xlint:unchecked"/ -->
    </javac>
  </target>

  <target name="demos" depends="dirs,pluginc"
   description="Puts all the demo files together for easy browsing.">
    <mkdir dir="${www}/contact-spring-graph/plugin-files/"/>

    <copy todir="${www}/contact-spring-graph">
      <fileset dir="${demos}/contact-spring-graph">
        <include name="demo.html"/>
        <include name="event-list.js"/>
        <include name="plugin-api.js"/>
      </fileset>
    </copy>
    <copy todir="${www}/contact-spring-graph">
      <fileset dir="${src}/com/google/caja/plugin">
        <include name="plugin-base.js"/>
      </fileset>
    </copy>
    <copy todir="${www}/contact-spring-graph">
      <fileset dir="${src}/com/google/caja/plugin/caps">
        <include name="wrap_capability.js"/>
      </fileset>
    </copy>

    <java classname="com.google.caja.plugin.HtmlPluginCompilerMain"
     failonerror="yes">
      <classpath refid="classpath.run"/>
      <arg value="--out=${www}/contact-spring-graph/plugin-files/"/>
      <arg value="--name=springGraph__"/>
      <arg value="--pathPrefix=/plugin-files/"/>
      <arg file="${demos}/contact-spring-graph/spring-graph.gxp"/>
      <arg file="${demos}/contact-spring-graph/spring-graph.css"/>
      <arg file="${demos}/contact-spring-graph/position.css"/>
      <arg file="${demos}/contact-spring-graph/spring-graph.js"/>
      <arg file="${demos}/contact-spring-graph/plugin-main.js"/>
    </java>
  </target>

  <!--
    - Enable Emma
    -
    - See
    - * http://wiki.metawerx.net/Wiki.jsp
    -   ?page=UsingEMMAWithANTForJUnitTestCoverageReporting
    - * http://emma.sourceforge.net/reference_single/reference.html#tool-ref.run
   -->
  <target name="emma" depends="dirs"
   description="Turns on EMMA instrumentation and reporting." >
    <property name="emma.enabled" value="true" />
    <!--
      - See http://emma.sourceforge.net/reference/ch02s06s02.html
      - This property, can be overriden via -Demma.filter=<list of filter specs>
      - on ANT's command line, will set the coverage filter; by default, all
      - com.google classes found in ${lib} will be instrumented.
      - org.commons.cli.apache and other third_party classes will not be.
     -->
    <property name="emma.filter" value="com.google.*"/>
  </target>

</project>
