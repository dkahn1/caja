<!--
  - Copyright (C) 2007 Google Inc.
  -
  - Licensed under the Apache License, Version 2.0 (the "License");
  - you may not use this file except in compliance with the License.
  - You may obtain a copy of the License at
  -
  -      http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS,
  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  - See the License for the specific language governing permissions and
  - limitations under the License.
 -->

<!-- takes an array of { summary: string, description: string } and builds a
   - group of nodes that can be repositioned as by spring=graph.js
   -
   - Requires: spring-graph.css
  -->
<gxp:template name="graph">
  <gxp:param name="nodeInfo"/>

  <div id="graph">

    <!-- a pseudo-node that cannot be repositioned.  at least one other node
       - should be connected to it to keep the graph roughly centered
      -->
    <div id="anchor" expr:title="nodeInfo[0].description"
     style="width: $(nodeInfo[0].name.length)em">

      <div class="box">
        <gxp:eval expr="nodeInfo[0].name"/>
      </div>
      
    </div>

    <gxp:loop var="info" iterator="nodeInfo.slice(1)">

      <div class="node"
       expr:title="info.description"
       style="width: $(info.name.length)em"
       onclick="selectNode(this)">

        <gxp:attr name="id">
          <!-- The character '@' is not allowed in ids, so we make the
             - email address id safe.  This simple transform works since
             - this demo uses a constrained set of email addresses.
             - If the plugin wanted to define an emailToDomId function it
             - could be called here.
            -->
          <gxp:eval expr="info.description.replace(/@/g, ':40:')"/>
        </gxp:attr>

        <div class="box">
          <gxp:eval expr="info.name"/>
        </div>
      </div>

    </gxp:loop>

  </div>
</gxp:template>
